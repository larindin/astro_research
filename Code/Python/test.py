
import numpy as np
import scipy.integrate
import matplotlib.pyplot as plt
from CR3BP import *


def CR3BP_STM(t, X):
    mu = 1.215059e-2
    state = X[0:6]

    ddtX = CR3BP_DEs(state, mu)
    return ddtX

def guess2integration(guess):

    initial_x = guess[0]
    initial_z = guess[1]
    initial_yvel = guess[2]
    integration_time = guess[3]

    y0 = np.array([initial_x, 0, initial_z, 0, initial_yvel, 0])
    t_span = np.array([0, integration_time])
    atol = 1e-12
    rtol = 1e-12
    inputs = {"y0":y0, "t_span":t_span, "atol":atol, "rtol":rtol}

    return inputs

initials = np.array([[8.309074641782335791e-01,0.000000000000000000e+00,5.269588601036361009e-02,2.700000000000000178e+00],
[8.167599971789875068e-01,0.000000000000000000e+00,1.983067431878146047e-01,2.829999999999997407e+00],
[8.102990331351598297e-01,0.000000000000000000e+00,2.691561840466470956e-01,2.979999999999994209e+00],
[8.052248852380662347e-01,0.000000000000000000e+00,3.176909637294840216e-01,3.139999999999990798e+00],
[8.003700759880018056e-01,0.000000000000000000e+00,3.549730539615732483e-01,3.309999999999987175e+00],
[7.955870056726292994e-01,0.000000000000000000e+00,3.840152170916513730e-01,3.479999999999983551e+00],
[7.909857746618310648e-01,0.000000000000000000e+00,4.067135778972535975e-01,3.639999999999980140e+00],
[7.859161898713447059e-01,0.000000000000000000e+00,4.276381805641543132e-01,3.809999999999976517e+00],
[7.809402446660745900e-01,0.000000000000000000e+00,4.453277461177665431e-01,3.969999999999973106e+00],
[7.750797667877941111e-01,0.000000000000000000e+00,4.637130692869773640e-01,4.149999999999969269e+00],
[7.703151902862902523e-01,0.000000000000000000e+00,4.773014204180228703e-01,4.289999999999966285e+00],
[7.653577627419183571e-01,0.000000000000000000e+00,4.905222157730355081e-01,4.429999999999963300e+00],
[7.605705920169719692e-01,0.000000000000000000e+00,5.026342766688642882e-01,4.559999999999960529e+00],
[7.601946709268253555e-01,0.000000000000000000e+00,5.035633826115019085e-01,4.569999999999960316e+00]])


num_runs = np.size(initials, 0)

solutions = []
for run_index in np.arange(num_runs):
    inputs = guess2integration(initials[run_index])
    solution = scipy.integrate.solve_ivp(CR3BP_STM, **inputs)
    solutions.append(solution)

ax = plt.figure().add_subplot()
for solution in solutions:
    ax.plot(solution.y[0], solution.y[1])
ax.set_aspect("equal")

plt.show()